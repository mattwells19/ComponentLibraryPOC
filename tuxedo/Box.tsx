import { createElement, forwardRef, ReactElement } from "react";
import { TuxedoComponentProps, splitStyleProps } from "../tuxedo/tux";
import { sprinkles } from "../tuxedo/sprinkles.css";

// TODO: there _has_ to be a better way to do this
export type BoxProps =
  | ({ as?: undefined } & TuxedoComponentProps<"div">)
  | ({ as: "div" } & TuxedoComponentProps<"div">)
  | ({ as: "main" } & TuxedoComponentProps<"main">)
  | ({ as: "form" } & TuxedoComponentProps<"form">)
  | ({ as: "button" } & TuxedoComponentProps<"button">)
  | ({ as: "a" } & TuxedoComponentProps<"a">)
  | ({ as: "abbr" } & TuxedoComponentProps<"abbr">)
  | ({ as: "address" } & TuxedoComponentProps<"address">)
  | ({ as: "area" } & TuxedoComponentProps<"area">)
  | ({ as: "article" } & TuxedoComponentProps<"article">)
  | ({ as: "aside" } & TuxedoComponentProps<"aside">)
  | ({ as: "audio" } & TuxedoComponentProps<"audio">)
  | ({ as: "b" } & TuxedoComponentProps<"b">)
  | ({ as: "base" } & TuxedoComponentProps<"base">)
  | ({ as: "bdi" } & TuxedoComponentProps<"bdi">)
  | ({ as: "bdo" } & TuxedoComponentProps<"bdo">)
  | ({ as: "big" } & TuxedoComponentProps<"big">)
  | ({ as: "blockquote" } & TuxedoComponentProps<"blockquote">)
  | ({ as: "body" } & TuxedoComponentProps<"body">)
  | ({ as: "br" } & TuxedoComponentProps<"br">)
  | ({ as: "button" } & TuxedoComponentProps<"button">)
  | ({ as: "canvas" } & TuxedoComponentProps<"canvas">)
  | ({ as: "caption" } & TuxedoComponentProps<"caption">)
  | ({ as: "center" } & TuxedoComponentProps<"center">)
  | ({ as: "cite" } & TuxedoComponentProps<"cite">)
  | ({ as: "code" } & TuxedoComponentProps<"code">)
  | ({ as: "col" } & TuxedoComponentProps<"col">)
  | ({ as: "colgroup" } & TuxedoComponentProps<"colgroup">)
  | ({ as: "data" } & TuxedoComponentProps<"data">)
  | ({ as: "datalist" } & TuxedoComponentProps<"datalist">)
  | ({ as: "dd" } & TuxedoComponentProps<"dd">)
  | ({ as: "del" } & TuxedoComponentProps<"del">)
  | ({ as: "details" } & TuxedoComponentProps<"details">)
  | ({ as: "dfn" } & TuxedoComponentProps<"dfn">)
  | ({ as: "dialog" } & TuxedoComponentProps<"dialog">)
  | ({ as: "div" } & TuxedoComponentProps<"div">)
  | ({ as: "dl" } & TuxedoComponentProps<"dl">)
  | ({ as: "dt" } & TuxedoComponentProps<"dt">)
  | ({ as: "em" } & TuxedoComponentProps<"em">)
  | ({ as: "embed" } & TuxedoComponentProps<"embed">)
  | ({ as: "fieldset" } & TuxedoComponentProps<"fieldset">)
  | ({ as: "figcaption" } & TuxedoComponentProps<"figcaption">)
  | ({ as: "figure" } & TuxedoComponentProps<"figure">)
  | ({ as: "footer" } & TuxedoComponentProps<"footer">)
  | ({ as: "form" } & TuxedoComponentProps<"form">)
  | ({ as: "h1" } & TuxedoComponentProps<"h1">)
  | ({ as: "h2" } & TuxedoComponentProps<"h2">)
  | ({ as: "h3" } & TuxedoComponentProps<"h3">)
  | ({ as: "h4" } & TuxedoComponentProps<"h4">)
  | ({ as: "h5" } & TuxedoComponentProps<"h5">)
  | ({ as: "h6" } & TuxedoComponentProps<"h6">)
  | ({ as: "head" } & TuxedoComponentProps<"head">)
  | ({ as: "header" } & TuxedoComponentProps<"header">)
  | ({ as: "hgroup" } & TuxedoComponentProps<"hgroup">)
  | ({ as: "hr" } & TuxedoComponentProps<"hr">)
  | ({ as: "html" } & TuxedoComponentProps<"html">)
  | ({ as: "i" } & TuxedoComponentProps<"i">)
  | ({ as: "iframe" } & TuxedoComponentProps<"iframe">)
  | ({ as: "img" } & TuxedoComponentProps<"img">)
  | ({ as: "input" } & TuxedoComponentProps<"input">)
  | ({ as: "ins" } & TuxedoComponentProps<"ins">)
  | ({ as: "kbd" } & TuxedoComponentProps<"kbd">)
  | ({ as: "keygen" } & TuxedoComponentProps<"keygen">)
  | ({ as: "label" } & TuxedoComponentProps<"label">)
  | ({ as: "legend" } & TuxedoComponentProps<"legend">)
  | ({ as: "li" } & TuxedoComponentProps<"li">)
  | ({ as: "link" } & TuxedoComponentProps<"link">)
  | ({ as: "main" } & TuxedoComponentProps<"main">)
  | ({ as: "map" } & TuxedoComponentProps<"map">)
  | ({ as: "mark" } & TuxedoComponentProps<"mark">)
  | ({ as: "menu" } & TuxedoComponentProps<"menu">)
  | ({ as: "menuitem" } & TuxedoComponentProps<"menuitem">)
  | ({ as: "meta" } & TuxedoComponentProps<"meta">)
  | ({ as: "meter" } & TuxedoComponentProps<"meter">)
  | ({ as: "nav" } & TuxedoComponentProps<"nav">)
  | ({ as: "noscript" } & TuxedoComponentProps<"noscript">)
  | ({ as: "object" } & TuxedoComponentProps<"object">)
  | ({ as: "ol" } & TuxedoComponentProps<"ol">)
  | ({ as: "optgroup" } & TuxedoComponentProps<"optgroup">)
  | ({ as: "option" } & TuxedoComponentProps<"option">)
  | ({ as: "output" } & TuxedoComponentProps<"output">)
  | ({ as: "p" } & TuxedoComponentProps<"p">)
  | ({ as: "param" } & TuxedoComponentProps<"param">)
  | ({ as: "picture" } & TuxedoComponentProps<"picture">)
  | ({ as: "pre" } & TuxedoComponentProps<"pre">)
  | ({ as: "progress" } & TuxedoComponentProps<"progress">)
  | ({ as: "q" } & TuxedoComponentProps<"q">)
  | ({ as: "rp" } & TuxedoComponentProps<"rp">)
  | ({ as: "rt" } & TuxedoComponentProps<"rt">)
  | ({ as: "ruby" } & TuxedoComponentProps<"ruby">)
  | ({ as: "s" } & TuxedoComponentProps<"s">)
  | ({ as: "samp" } & TuxedoComponentProps<"samp">)
  | ({ as: "slot" } & TuxedoComponentProps<"slot">)
  | ({ as: "script" } & TuxedoComponentProps<"script">)
  | ({ as: "section" } & TuxedoComponentProps<"section">)
  | ({ as: "select" } & TuxedoComponentProps<"select">)
  | ({ as: "small" } & TuxedoComponentProps<"small">)
  | ({ as: "source" } & TuxedoComponentProps<"source">)
  | ({ as: "span" } & TuxedoComponentProps<"span">)
  | ({ as: "strong" } & TuxedoComponentProps<"strong">)
  | ({ as: "style" } & TuxedoComponentProps<"style">)
  | ({ as: "sub" } & TuxedoComponentProps<"sub">)
  | ({ as: "summary" } & TuxedoComponentProps<"summary">)
  | ({ as: "sup" } & TuxedoComponentProps<"sup">)
  | ({ as: "table" } & TuxedoComponentProps<"table">)
  | ({ as: "template" } & TuxedoComponentProps<"template">)
  | ({ as: "tbody" } & TuxedoComponentProps<"tbody">)
  | ({ as: "td" } & TuxedoComponentProps<"td">)
  | ({ as: "textarea" } & TuxedoComponentProps<"textarea">)
  | ({ as: "tfoot" } & TuxedoComponentProps<"tfoot">)
  | ({ as: "th" } & TuxedoComponentProps<"th">)
  | ({ as: "thead" } & TuxedoComponentProps<"thead">)
  | ({ as: "time" } & TuxedoComponentProps<"time">)
  | ({ as: "title" } & TuxedoComponentProps<"title">)
  | ({ as: "tr" } & TuxedoComponentProps<"tr">)
  | ({ as: "track" } & TuxedoComponentProps<"track">)
  | ({ as: "u" } & TuxedoComponentProps<"u">)
  | ({ as: "ul" } & TuxedoComponentProps<"ul">)
  | ({ as: "video" } & TuxedoComponentProps<"video">)
  | ({ as: "wbr" } & TuxedoComponentProps<"wbr">)
  | ({ as: "webview" } & TuxedoComponentProps<"webview">);

const Box = forwardRef<HTMLElement, BoxProps>(
  ({ as = "div", children, className, ...props }, ref): ReactElement => {
    const [elementProps, stylesProps] = splitStyleProps(props);

    const sprinklesClass = sprinkles(stylesProps);

    return createElement(
      as,
      {
        ...elementProps,
        className: className || sprinklesClass ? `${className ?? ""} ${sprinklesClass}`.trim() : undefined,
        ref,
      },
      children,
    );
  },
);

export default Box;
